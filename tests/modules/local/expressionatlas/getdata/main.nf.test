nextflow_process {

    name "Test Process EXPRESSIONATLAS_GETDATA"
    script "modules/local/expressionatlas/getdata/main.nf"
    process "EXPRESSIONATLAS_GETDATA"
    tag "getdata"
    tag "module"

    test("Transcriptome Analysis of the potato (rnaseq)") {

        tag "getdata_potato"

        when {

            process {
                """
                input[0] = "E-MTAB-552"
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("Transcription profiling by array of Arabidopsis mutant for fis2 (microarray)") {

        tag "getdata_arabido"

        when {

            process {
                """
                input[0] = "E-TABM-1007"
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("Arabidopsis Geo dataset") {

        tag "getdata_arabido_geo"

        when {

            process {
                """
                input[0] = "E-GEOD-62537"
                """
            }
        }

        then {
            assert process.success
            assert snapshot(process.out).match()
        }

    }

    test("Invalid accession") {

        tag "getdata_invalid"

        when {

            process {
                """
                input[0] = "fake-accession"
                """
            }
        }

        then {
            assert process.success
            assert process.trace.succeeded().size() == 0
            assert process.trace.failed().size() == 1
            // check for the absence of expected output (the error is ignored but no output is produced)
            assert process.out.design.size() == 0

        }

    }

    test("Accession not available") {

        tag "getdata_unavailable"

        when {

            process {
                """
                input[0] = "E-GEOD-161565656"
                """
            }
        }

        then {
            assert process.success
            assert process.trace.succeeded().size() == 0
            assert process.trace.failed().size() == 1
            // check for the absence of expected output (the error is ignored but no output is produced)
            assert process.out.design.size() == 0

        }

    }

    test("E-MTAB-5132") {

        tag "getdata_unavailable"

        when {

            process {
                """
                input[0] = "E-MTAB-5132"
                """
            }
        }

        then {
            assert process.success
            assert process.trace.succeeded().size() == 0
            assert process.trace.failed().size() == 1
            // check for the absence of expected output (the error is ignored but no output is produced)
            assert process.out.design.size() == 0
        }

    }

    test("E-PROT-138") {

        tag "getdata_unsupported"

        when {

            process {
                """
                input[0] = "E-PROT-138"
                """
            }
        }

        then {
            assert process.success
            assert process.trace.succeeded().size() == 0
            assert process.trace.failed().size() == 1
            // check for the absence of expected output (the error is ignored but no output is produced)
            assert process.out.design.size() == 0
        }

    }

}
